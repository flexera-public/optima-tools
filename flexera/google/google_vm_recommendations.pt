name "Google Idle VM Recommender"
rs_pt_ver 20180301
type "policy"
short_description "A mock that checks for idle vms and, optionally, deletes them. See the [README](https://github.com/flexera/policy_templates/tree/master/cost/google/idle_vm_recommendations) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
severity "low"
category "Cost"
default_frequency "daily"
info(
  version: "0.1",
  provider: "Google",
  service: "Compute",
  policy_set: "Idle Compute Instances"
)

##################
# User inputs    #
##################

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
end

parameter "param_zones" do
  type "list"
  label "Zones"
  description "Location to check, this is zone names"
end

parameter "param_project" do
  type "list"
  label "Project ID"
  description "Google Projects to Query. Leave blank to query all projects."
end

parameter "param_exclude_tags" do
  category "User Inputs"
  label "Exclusion Tag Key:Value"
  description "Cloud native tag (label) to ignore VM Instances. Format: Key:Value"
  type "string"
  allowed_pattern /(^$)|([\w]?)+\:([\w]?)/
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Terminate Instances"]
end

parameter "param_log_to_cm_audit_entries" do
  type "string"
  label "Log to CM Audit Entries"
  description "Boolean for whether or not to log any debugging information from actions to CM Audit Entries, this should be left set to No on Flexera EU"
  default "No"
  allowed_values "Yes", "No"
end

###############################################################################
# Authentication
###############################################################################

###############################################################################
# Pagination
###############################################################################

###############################################################################
# Datasources
###############################################################################

datasource "ds_google_instance_map" do
  request do
    verb "GET"
    host "raw.githubusercontent.com"
    path "/flexera-public/optima-tools/master/flexera/data/google/google_vm_recommendations.json"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_google_cost_mapping" do
  run_script $js_instance_cost_mapping, $ds_google_instance_map, $param_zones, $param_project, $param_exclude_tags
end

###############################################################################
# Scripts
###############################################################################

script "js_instance_cost_mapping", type:"javascript" do
  result "result"
  parameters "ds_google_instance_map", "param_zones", "param_project", "param_exclude_tags"
  code <<-EOS
  var result = []
  monthlySavings = 0
  var projList = []

  function getRandomInboundNumber(upper, lower, decimal) {
    var num = Math.floor(Math.random() * (upper - lower) + lower)
    if (decimal) {
      var numFigs = Math.floor(Math.random() * (100))/100
      return num + numFigs;
    }
    return num
  }

  if (param_project.length >0) {
    _.each(param_project, function(project){
      project.accountID = param_project
      project.accountNumber = getRandomInboundNumber(99999999, 10000000, false).String()
      projList.push(project)
    })
  }

  _.each(ds_google_instance_map.values, function(instance){
    monthlySavings = monthlySavings + instance.savings
  })

  _.each(ds_google_instance_map.values, function(instance){
    var is_tag_matched = false
    for(var k=0;k<param_exclude_tags.length;k++){
      if(_.has(instance.tags, param_exclude_tags[k])){
        is_tag_matched=true
      }
    }
    if (!is_tag_matched) {
      if (param_zones.length >0) {
        var setRegion = getRandomInboundNumber(param_zones.length, 0, false)
        instance.region = param_zones[setRegion]
      }

      if (param_project.length >0) {
        var setProject = getRandomInboundNumber(projList.length, 0, false)
        instance.accountID = projList[setProject].accountID
        instance.accountName = projList[setProject].accountID
        instance.accountNumber = projList[setProject].accountNumber
      }

      var message="The total estimated monthly savings are Â£"+ monthlySavings;
      instance.message = message
      result.push(instance)
    }
  })

  result = _.sortBy(result,"region");
  result = _.sortBy(result,"accountID");
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_recommendations" do
  validate_each $ds_google_cost_mapping do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Unused VMs Found"
    detail_template <<-EOS
{{with index data 0}}{{.message}}{{end}}
EOS
    check eq(1, 0)
    escalate $send_email_report
    escalate $esc_terminate_resources
    export "instance_list" do
      resource_level true
      field "accountID" do
        label "Account ID"
      end
      field "accountNumber" do
        label "Account Number"
      end
      field "resourceID" do
        label "Resource ID"
      end
      field "resourceName" do
        label "Resource Name"
      end
      field "resourceType" do
        label "Resource Type"
      end
      field "region" do
        label "Zone"
      end
      field "hostname" do
        label "Hostname"
      end
      field "cpuMaximum" do
        label "CPU Maximum %"
      end
      field "cpuMinimum" do
        label "CPU Minimum %"
      end
      field "cpuAverage" do
        label "CPU Average %"
      end
      field "tags" do
        label "Tags"
      end
      field "description" do
        label "Description"
      end
      field "service" do
        label "Service"
      end
      field "savingsCurrency" do
        label "Currency"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "priority" do
        label "Priority"
      end
      field "recommenderSubtype" do
        label "Sub Type"
      end
      field "state" do
        label "State"
      end
      field "status" do
        label "Status"
      end
      field "id" do
        label "ID"
        path "resourceID"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "send_email_report" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

escalation "esc_terminate_resources" do
  automatic contains($param_automatic_action, "Terminate Instances")
  label "Terminate Instances"
  description "Approval to terminate all selected instances"
  run "terminate_resources"
end

###############################################################################
# Cloud Workflow
###############################################################################

define terminate_resources() do
end
