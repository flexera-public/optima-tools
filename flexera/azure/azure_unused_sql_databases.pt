name "Azure Unused SQL Databases"
rs_pt_ver 20180301
type "policy"
short_description "A mock policy that check for database services that have no connections and decommissions them after approval. See the [README](https://github.com/flexera/policy_templates/tree/master/cost/azure/unused_sql_databases/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "low"
category "Cost"
default_frequency "daily"
info(
  version: "0.1",
  provider: "Azure",
  service: "SQL",
  policy_set: "Unused Database Services"
  )

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created."
end

parameter "param_exclusion_tag_key" do
  type "string"
  category "User Inputs"
  label "Exclusion Tag Key"
  description "Azure-native SQL Database tag key to ignore databases. Only supply the tag key. The policy assumes that the tag value is irrelevant."
end

parameter "param_azure_endpoint" do
  type "string"
  label "Azure Endpoint"
  description "Azure Endpoint to access resources"
  allowed_values "management.azure.com", "management.chinacloudapi.cn"
  default "management.azure.com"
end

parameter "param_subscription_whitelist" do
  label "Subscription Whitelist"
  type "list"
  description "Whitelisted Subscriptions, if empty, all subscriptions will be checked"
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Terminate Instances"]
end

parameter "param_log_to_cm_audit_entries" do
  type "string"
  label "Log to CM Audit Entries"
  description "Boolean for whether or not to log any debugging information from actions to CM Audit Entries, this should be left set to No on Flexera EU"
  default "No"
  allowed_values "Yes", "No"
end

###############################################################################
# Authentication
###############################################################################

###############################################################################
# Pagination
###############################################################################

###############################################################################
# Datasources
###############################################################################

datasource "ds_azure_instance_map" do
  request do
    verb "GET"
    host "raw.githubusercontent.com"
    path "/flexera-public/optima-tools/master/flexera/data/azure/azure_unused_sql_databases.json"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_instance_cost_mapping" do
  run_script $js_instance_cost_mapping, $ds_azure_instance_map, $param_subscription_whitelist, $param_exclusion_tag_key
end

###############################################################################
# Scripts
###############################################################################

script "js_instance_cost_mapping", type:"javascript" do
  result "result"
  parameters "ds_azure_instance_map", "param_subscription_whitelist", "param_exclusion_tag_key"
  code <<-EOS
  var result = []
  monthlySavings = 0

  function getRandomInboundNumber(upper, lower, decimal) {
    var num = Math.floor(Math.random() * (upper - lower) + lower)
    if (decimal) {
      var numFigs = Math.floor(Math.random() * (100))/100
      return num + numFigs;
    }
    return num
  }

  _.each(ds_azure_instance_map.values, function(instance){
    monthlySavings = monthlySavings + instance.savings
  })

  _.each(ds_azure_instance_map.values, function(instance){
   var is_tag_matched = false
    for(var k=0;k<param_exclusion_tag_key.length;k++){
      if(_.has(instance.tags, param_exclusion_tag_key[k])){
        is_tag_matched=true
      }
    }
    if (!is_tag_matched) {
      if (param_subscription_whitelist.length >0) {
        var setProject = getRandomInboundNumber(param_subscription_whitelist.length, 0, false)
        instance.subscriptionID = param_subscription_whitelist[setProject]
      }

      var message="The total estimated monthly savings are Â£"+ monthlySavings;
      instance.message = message
      result.push(instance)
    }
  })

  result = _.sortBy(result,"region");
  result = _.sortBy(result,"subscriptionID");
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_azure_db_utilization" do
  validate_each $ds_instance_cost_mapping do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Unused Azure Databases Found"
    detail_template <<-EOS
{{with index data 0}}{{.message}}{{end}}
EOS
    escalate $esc_email_report
    escalate $esc_delete_unused_sql_databases_approval
    check eq(1, 0)
    export do
      resource_level true
      field "subscriptionID" do
        label "Subscription ID"
      end
      field "subscriptionName" do
        label "subscription Name"
      end
      field "resourceID" do
        label "Resource ID"
      end
      field "resourceName" do
        label "Resource Name"
      end
      field "resourceGroup" do
        label "Resource Group"
      end
      field "region" do
        label "Region"
      end
      field "resourceKind" do
        label "Resource Kind"
      end
      field "resourceType" do
        label "Resource Type"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "savingsCurrency" do
        label "Savings Currency"
      end
      field "tags" do
        label "Tags"
      end
      field "service" do
        label "Service"
      end
      field "skuName" do
        label "SKU - Name"
        path "sku.name"
      end
      field "skuTier" do
        label "SKU - Tier"
        path "sku.tier"
      end
      field "skuCapacity" do
        label "SKU - Capacity"
        path "sku.capacity"
      end
      field "accountID" do
        label "Account ID"
        path "subscriptionID"
      end
      field "accountName" do
        label "Account Name"
        path "subscriptionName"
      end
      field "id" do
        label "ID"
        path "resourceID"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email_report" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

escalation "esc_delete_unused_sql_databases_approval" do
  automatic contains($param_automatic_action, "Terminate Instances")
  label "Delete SQL databases"
  description "Deleted unused SQL Databases"
  run "delete_unused_sql_databases"
end

###############################################################################
# Cloud Workflow
###############################################################################

define delete_unused_sql_databases() do
end
