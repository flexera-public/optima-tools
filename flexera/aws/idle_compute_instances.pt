name "AWS Idle Compute Instances"
rs_pt_ver 20180301
type "policy"
short_description "A Mock Policy that would check for instances that are idle for the last 30 days and terminates them after approval. See the [README](https://github.com/flexera/policy_templates/tree/master/cost/aws/idle_compute_instances/) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
severity "low"
category "Cost"
default_frequency "daily"
info(
  version: "0.1",
  provider: "AWS",
  service: "EC2",
  policy_set: "Idle Compute Instances"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_allowed_regions" do
  type "list"
  label "Allowed Regions"
  allowed_pattern /^([a-zA-Z-_]+-[a-zA-Z0-9-_]+-[0-9-_]+,*|)+$/
  description "A list of allowed regions. See the README for more details"
end

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
end

parameter "param_avg_used_memory" do
  type "number"
  label "Average used memory percentage"
  description "Set to -1 to ignore memory utilization"
  default -1
  min_value -1
  max_value 100
end

parameter "param_aws_account_number" do
  type "string"
  label "Account Number"
  description "The account number for AWS STS Cross Account Roles."
  default ""
end

parameter "param_avg_cpu" do
  type "number"
  label "Average used CPU percentage"
  description "Set to -1 to ignore CPU utilization"
  default -1
  min_value -1
  max_value 100
end

parameter "param_exclusion_tag_key" do
  category "User Inputs"
  label "Exclusion Tag Key:Value"
  description "Cloud native tag to ignore instances. Format: Key:Value"
  type "string"
  allowed_pattern /(^$)|([\w]?)+\:([\w]?)+/
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Terminate Instances"]
end

parameter "param_log_to_cm_audit_entries" do
  type "string"
  label "Log to CM Audit Entries"
  description "Boolean for whether or not to log any debugging information from actions to CM Audit Entries, this should be left set to No on Flexera EU"
  default "No"
  allowed_values "Yes", "No"
end

###############################################################################
# Authentication
###############################################################################

###############################################################################
# Datasources
###############################################################################

datasource "ds_aws_instance_map" do
  request do
    verb "GET"
    host "raw.githubusercontent.com"
    path "/flexera-public/optima-tools/master/flexera/data/aws/idle_compute_instances.json"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_instance_cost_mapping" do
  run_script $js_instance_cost_mapping, $ds_aws_instance_map, $param_avg_cpu, $param_avg_used_memory, $param_allowed_regions, $param_exclusion_tag_key
end

###############################################################################
# Scripts
###############################################################################

script "js_instance_cost_mapping", type:"javascript" do
  result "result"
  parameters "ds_aws_instance_map", "param_avg_cpu", "param_avg_used_memory", "param_allowed_regions", "param_exclusion_tag_key"
  code <<-EOS
  var result = []
  monthlySavings = 0

  _.each(ds_aws_instance_map.values, function(instance){
    monthlySavings = monthlySavings + instance.savings
  })

  _.each(ds_aws_instance_map.values, function(instance){
    var is_tag_matched = false
    for(var k=0;k<param_exclusion_tag_key.length;k++){
      if(_.has(instance.tags, param_exclusion_tag_key[k])){
        is_tag_matched=true
      }
    }
    if (!is_tag_matched) {
      function getRandomInboundNumber(upper, lower, decimal) {
        var num = Math.floor(Math.random() * (upper - lower) + lower)
        if (decimal) {
          var numFigs = Math.floor(Math.random() * (100))/100
          return num + numFigs;
        }
        return num
      }

      if (param_allowed_regions.length >0) {
        var setRegion = getRandomInboundNumber(param_allowed_regions.length, 0, false)
        instance.region = param_allowed_regions[setRegion]
      }

      if (param_avg_cpu === -1) {
        param_avg_cpu = 100
      }
      if (param_avg_used_memory === -1) {
        param_avg_used_memory = 100
      }
      instance.cpu_average = getRandomInboundNumber(param_avg_cpu, 0, true)
      instance.cpu_minimum = getRandomInboundNumber(instance.cpu_average, 0, true)
      instance.cpu_maximum = getRandomInboundNumber(param_avg_cpu, instance.cpu_average, true)
      instance.mem_average = getRandomInboundNumber(param_avg_used_memory, 0, true)
      instance.mem_minimum = getRandomInboundNumber(instance.mem_average, 0, true)
      instance.mem_maximum = getRandomInboundNumber(param_avg_used_memory, instance.mem_average, true)

      var message="The total estimated monthly savings are Â£"+ monthlySavings;
      instance.message = message
      result.push(instance)
    }
  })

  result = _.sortBy(result,"region");
  result = _.sortBy(result,"id");
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_utilization" do
  validate_each $ds_instance_cost_mapping do
    summary_template "AWS Account ID: {{with index data 0}}{{.accountID}}{{end}} - {{ len data}} rows containing AWS instance CloudWatch utilization data"
    detail_template <<-EOS

{{with index data 0}}{{.message}}{{end}}
EOS
    escalate $email
    escalate $terminate_resources
    check eq(1, 0)
    export "instance_list" do
      resource_level true
      field "accountID" do
        label "Account Id"
      end
      field "resourceID" do
        label "Resource ID"
      end
      field "region" do
        label "Region"
      end
      field "platform" do
        label "Platform"
      end
      field "hostname" do
        label "Hostname"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "savingsCurrency" do
        label "Savings Currency"
      end
      field "privateDnsName" do
        label "Private DNS Name"
      end
      field "cpu_maximum" do
        label "CPU Maximum %"
      end
      field "cpu_minimum" do
        label "CPU Minimum %"
      end
      field "cpu_average" do
        label "CPU Average %"
      end
      field "resourceType" do
        label "Resource Type"
      end
      field "mem_maximum" do
        label "Memory Maximum %"
      end
      field "mem_minimum" do
        label "Memory Minimum %"
      end
      field "mem_average" do
        label "Memory Average %"
      end
      field "tags" do
        label "Tags"
      end
      field "id" do
        label "ID"
        path "resourceID"
      end
      field "service" do
        label "Service"
      end
    end
  end
end


###############################################################################
# Escalations
###############################################################################

escalation "email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

escalation "terminate_resources" do
  automatic contains($param_automatic_action, "Terminate Instances")
  label "Terminate Instances"
  description "Approval to terminate all selected instances"
  run "terminate_resources"
end

###############################################################################
# Cloud Workflow
###############################################################################

define terminate_resources() do
end
