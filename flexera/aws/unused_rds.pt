name "AWS Unused RDS Instance"
rs_pt_ver 20180301
type "policy"
short_description "A mock policy that: Checks for database services that have no connections and delete them after approval. See the [README](https://github.com/flexera/policy_templates/tree/master/cost/aws/unused_rds) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "low"
category "Cost"
default_frequency "daily"
info(
  version: "0.1",
  provider: "AWS",
  service: "RDS",
  policy_set: "Unused Database Services"
  )

###############################################################################
# Parameters
###############################################################################

parameter "param_allowed_regions" do
  type "list"
  label "Allowed Regions"
  allowed_pattern /^([a-zA-Z-_]+-[a-zA-Z0-9-_]+-[0-9-_]+,*|)+$/
  description "A list of allowed regions. See the README for more details"
end

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
end

parameter "param_exclude_tags" do
  label "Exclusion Tag Key:Value"
  description "AWS tag key to ignore instances. Format: Key:Value"
  type "string"
end

parameter "param_aws_account_number" do
  type "string"
  label "Account Number"
  description "The account number for AWS STS Cross Account Roles."
  default ""
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Delete Instances"]
end

###############################################################################
# Authentication
###############################################################################


###############################################################################
# Datasources
###############################################################################

datasource "ds_aws_instance_map" do
  request do
    verb "GET"
    host "raw.githubusercontent.com"
    path "/flexera-public/optima-tools/master/flexera/data/aws/unused_rds.json"
    header "User-Agent", "RS Policies"
  end
end

# get all the RDS instances merged together with the tags and CloudWatch
datasource "ds_instance_cost_mapping" do
  run_script $js_instance_cost_mapping, $ds_aws_instance_map, $param_allowed_regions, $param_exclude_tags
end

###############################################################################
# Scripts
###############################################################################

script "js_instance_cost_mapping", type:"javascript" do
  result "result"
  parameters "ds_aws_instance_map", "param_allowed_regions", "param_exclude_tags"
  code <<-EOS
  var result = []
  monthlySavings = 0

  _.each(ds_aws_instance_map.values, function(instance){
    monthlySavings = monthlySavings + instance.savings
  })

  _.each(ds_aws_instance_map.values, function(instance){
    var is_tag_matched = false
    for(var k=0;k<param_exclude_tags.length;k++){
      if(_.has(instance.tags, param_exclude_tags[k])){
        is_tag_matched=true
      }
    }
    if (!is_tag_matched) {
      function getRandomInboundNumber(upper, lower, decimal) {
        var num = Math.floor(Math.random() * (upper - lower) + lower)
        if (decimal) {
          var numFigs = Math.floor(Math.random() * (100))/100
          return num + numFigs;
        }
        return num
      }

      if (param_allowed_regions.length >0) {
        var setRegion = getRandomInboundNumber(param_allowed_regions.length, 0, false)
        instance.region = param_allowed_regions[setRegion]
      }
      var message="The total estimated monthly savings are Â£"+ monthlySavings;
      instance.message = message
      result.push(instance)
    }
  })

  result = _.sortBy(result,"region");
  result = _.sortBy(result,"accountID");
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_unused_rds" do
  validate_each $ds_instance_cost_mapping do
    summary_template "AWS Account ID: {{with index data 0}}{{.accountID}}{{end}} - {{ len data}} rows containing AWS RDS Unused Instances"
    detail_template <<-EOS

{{with index data 0}}{{.message}}{{end}}
EOS
    escalate $email
    check eq(1,0)
    export "instance_list" do
      resource_level true
      field "accountID" do
        label "Account ID"
      end
      field "region" do
        label "Region"
      end
      field "name" do
        label "Name"
      end
      field "status" do
        label "Status"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "savingsCurrency" do
        label "Savings Currency"
      end
      field "resourceID" do
        label "Resource Id"
      end
      field "privateDnsName" do
        label "Private DNS Name"
      end
      field "resourceType" do
        label "Resource Type"
      end
      field "connections" do
        label "Connections"
      end
      field "arn" do
        label "ARN"
      end
      field "tags" do
        label "Tags"
      end
      field "id" do
        label "id"
        path "resourceID"
      end
      field "service" do
        label "Service"
      end
    end
  end
end


###############################################################################
# Escalations
###############################################################################

escalation "email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

###############################################################################
# Cloud Workflow
###############################################################################
