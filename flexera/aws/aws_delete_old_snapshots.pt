name "AWS Old Snapshots"
rs_pt_ver 20180301
type "policy"
short_description "A Mock Policy that would check for snapshots older than a specified number of days and, optionally, deletes them. See the [README](https://github.com/flexera/policy_templates/tree/master/cost/aws/old_snapshots) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
category "Cost"
severity "low"
default_frequency "daily"
info(
  version: "0.1",
  provider: "AWS",
  service: "EBS",
  policy_set: "Old Snapshots"
)

###############################################################################
# User inputs
###############################################################################

parameter "param_allowed_regions" do
  type "list"
  label "Allowed Regions"
  allowed_pattern /^([a-zA-Z-_]+-[a-zA-Z0-9-_]+-[0-9-_]+,*|)+$/
  description "A list of allowed regions. See the README for more details"
end

parameter "param_email" do
  type "list"
  label "Email addresses"
  description "A list of email addresses to notify."
end

parameter "snapshot_age" do
  type "number"
  label "Snapshot age"
  default 30
  description "The number of days since the snapshot was created."
  min_value 1
end

parameter "param_aws_account_number" do
  type "string"
  label "Account Number"
  description "The account number for AWS STS Cross Account Roles."
  default ""
end

parameter "param_deregister_image" do
  type "string"
  label "Deregister Image"
  description "If Yes, the snapshot will be deleted along with the images, and if No the snapshot will not be considered for deletion."
  allowed_values "Yes", "No"
  default "No"
end

parameter "param_exclude_tags" do
  type "list"
  category "User Inputs"
  label "Exclude Tags"
  description "List of tags that a snapshot can have to exclude it from the list."
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Delete Snapshots"]
end

parameter "param_flexera_org_id_for_optima" do
  type "string"
  label "Flexera One Org ID for Optima"
  description "The Flexera One org ID for Optima queries used to determine estimated costs, by default the current org is used"
  default "current"
  allowed_pattern /^(current|[0-9]+)$/
end

parameter "param_log_to_cm_audit_entries" do
  type "string"
  label "Log to CM Audit Entries"
  description "Boolean for whether or not to log any debugging information from actions to CM Audit Entries, this should be left set to No on Flexera EU"
  default "No"
  allowed_values "Yes", "No"
end

###############################################################################
# Authentication
###############################################################################

###############################################################################
# Pagination
###############################################################################

###############################################################################
# Datasources
###############################################################################

datasource "ds_aws_instance_map" do
  request do
    verb "GET"
    host "raw.githubusercontent.com"
    path "/flexera-public/optima-tools/master/flexera/data/aws/aws_delete_old_snapshots.json"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_snapshots_cost_mapping" do
  run_script $js_instance_cost_mapping, $ds_aws_instance_map, $snapshot_age, $param_allowed_regions, $param_exclude_tags
end

###############################################################################
# Scripts
###############################################################################

script "js_instance_cost_mapping", type:"javascript" do
  result "result"
  parameters "ds_aws_instance_map", "snapshot_age", "param_allowed_regions", "param_exclude_tags"
  code <<-EOS
  var result = []
  monthlySavings = 0

  _.each(ds_aws_instance_map.values, function(instance){
    monthlySavings = monthlySavings + instance.savings
  })

  _.each(ds_aws_instance_map.values, function(instance){
    var is_tag_matched = false
    for(var k=0;k<param_exclude_tags.length;k++){
      if(_.has(instance.tags, param_exclude_tags[k])){
        is_tag_matched=true
      }
    }
    if (!is_tag_matched) {
      var message="The total estimated monthly savings are Â£"+ monthlySavings;
      instance.message = message
      function getRandomInboundNumber(upper, lower, decimal) {
        var num = Math.floor(Math.random() * (upper - lower) + lower)
        if (decimal) {
          var numFigs = Math.floor(Math.random() * (100))/100
          return num + numFigs;
        }
        return num
      }
      if (param_allowed_regions.length >0) {
        var setRegion = getRandomInboundNumber(param_allowed_regions.length, 0, false)
        instance.region = param_allowed_regions[setRegion]
      }
      instance.daysOld = getRandomInboundNumber((snapshot_age + 200), snapshot_age)
      result.push(instance)
    }
  })

  result = _.sortBy(result,"region");
  result = _.sortBy(result,"accountID");
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_utilization" do
  validate_each $ds_snapshots_cost_mapping do
    summary_template "AWS Account ID: {{with index data 0}}{{ .accountID }}{{end}} - {{ len data }} rows containing AWS old snapshot data"
    detail_template <<-EOS
The following {{ len data }} old snapshots, for AWS Account: {{with index data 0}}{{ .accountID }}{{end}}, have exceeded the specified age of: 30 days old.

{{with index data 0}}{{.message}}{{end}}
EOS
    escalate $ese_email
    escalate $esc_delete_snapshot
    check eq(1, 0)
    export do
      resource_level true
      field "accountID" do
        label "Account ID"
      end
      field "region" do
        label "Region"
      end
      field "daysOld" do
        label "Days Old"
      end
      field "volumeSize" do
        label "Size"
      end
      field "resourceID" do
        label "Resource ID"
      end
      field "snapshotImageIdFormat" do
        label "AMI"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "savingsCurrency" do
        label "Savings Currency"
      end
      field "tags" do
        label "Tags"
      end
      field "id" do
        label "ID"
        path "resourceID"
      end
      field "service" do
        label "Service"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "ese_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

escalation "esc_delete_snapshot" do
  automatic contains($param_automatic_action, "Delete Snapshots")
  label "Delete Snapshots"
  description "Approval to delete all selected snapshots"
  run "take_action"
end

###############################################################################
# Cloud Workflow
###############################################################################

define take_action() do
end
