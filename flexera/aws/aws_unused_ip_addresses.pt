name "AWS Unused IP Addresses"
rs_pt_ver 20180301
type "policy"
short_description "A Mock Policy that would check AWS for unused IP Addresses and, optionally, deletes them. See the [README](https://github.com/flexera/policy_templates/tree/master/cost/aws/unused_ip_addresses/) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
severity "low"
category "Cost"
default_frequency "daily"
info(
    version: "0.1",
    provider: "AWS",
    service: "EC2",
    policy_set: "Unused IP Addresses"
  )

##############################################################################
# Parameters
##############################################################################

parameter "param_allowed_regions" do
  type "list"
  label "Allowed Regions"
  allowed_pattern /^([a-zA-Z-_]+-[a-zA-Z0-9-_]+-[0-9-_]+,*|)+$/
  description "A list of allowed regions. See the README for more details"
end

parameter "param_exclude_tags" do
  type "list"
  label "Exclusion Tags"
  description "A list of AWS tags to ignore Elastic IPs. Format: Key=Value"
end

parameter "param_email" do
  type "list"
  label "Email addresses"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
end

parameter "param_aws_account_number" do
  type "string"
  label "Account Number"
  description "The account number for AWS STS Cross Account Roles."
  default ""
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Delete Unused IPs"]
end

parameter "param_log_to_cm_audit_entries" do
  type "string"
  label "Log to CM Audit Entries"
  description "Boolean for whether or not to log any debugging information from actions to CM Audit Entries, this should be left set to No on Flexera EU"
  default "No"
  allowed_values "Yes", "No"
end

###############################################################################
# Authentication
###############################################################################

###############################################################################
# Datasources
###############################################################################

datasource "ds_aws_instance_map" do
  request do
    verb "GET"
    host "raw.githubusercontent.com"
    path "/flexera-public/optima-tools/master/flexera/data/aws/aws_unused_ip_addresses.json"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_ip_cost_mapping" do
  run_script $js_instance_cost_mapping, $ds_aws_instance_map, $param_allowed_regions, $param_exclude_tags
end

###############################################################################
# Scripts
###############################################################################

script "js_instance_cost_mapping", type:"javascript" do
  result "result"
  parameters "ds_aws_instance_map", "param_allowed_regions", "param_exclude_tags"
  code <<-EOS
  var result = []
  monthlySavings = 0

  _.each(ds_aws_instance_map.values, function(instance){
    monthlySavings = monthlySavings + instance.savings
  })

  _.each(ds_aws_instance_map.values, function(instance){
    var is_tag_matched = false
    for(var k=0;k<param_exclude_tags.length;k++){
      if(_.has(instance.tags, param_exclude_tags[k])){
        is_tag_matched=true
      }
    }
    if (!is_tag_matched) {
      function getRandomInboundNumber(upper, lower, decimal) {
        var num = Math.floor(Math.random() * (upper - lower) + lower)
        if (decimal) {
          var numFigs = Math.floor(Math.random() * (100))/100
          return num + numFigs;
        }
        return num
      }

      if (param_allowed_regions.length >0) {
        var setRegion = getRandomInboundNumber(param_allowed_regions.length, 0, false)
        instance.region = param_allowed_regions[setRegion]
      }

      var message="The total estimated monthly savings are Â£"+ monthlySavings;
      instance.message = message
      result.push(instance)
    }
  })

  result = _.sortBy(result,"region");
  result = _.sortBy(result,"accountID");
  EOS
end

###############################################################################
# Policy
##############################################################################

policy "policy_unused_ip_addresses" do
  validate_each $ds_ip_cost_mapping do
    summary_template "AWS Account ID: {{with index data 0}}{{.accountID}}{{end}}  - {{ len data }} Unused IP Addresses Found"
    detail_template <<-EOS

{{with index data 0}}{{.message}}{{end}}

EOS
    check eq(1,0)
    escalate $esc_email
    escalate $esc_delete_ip_address
    export "instance_list" do
      resource_level true
      field "accountID" do
        label "Account ID"
      end
      field "resourceID" do
        label "Resource ID"
        path "publicIp"
      end
      field "domain" do
        label "Domain"
      end
      field "region" do
        label "Region"
      end
      field "tags" do
        label "Tags"
      end
      field "allocation_id" do
        label "Allocation Id"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "savingsCurrency" do
        label "Savings Currency"
      end
      field "id" do
        label "Id"
        path "publicIp"
      end
      field "service" do
        label "Service"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

escalation "esc_delete_ip_address" do
  automatic contains($param_automatic_action, "Delete Unused IPs")
  label "Delete IP"
  description "Delete Selected Unused IP"
  run "delete_unused_instances"
end

###############################################################################
# Cloud Workflow
###############################################################################

define delete_unused_instances() do
end
